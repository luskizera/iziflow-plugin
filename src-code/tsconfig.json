// src-code/tsconfig.json (REFINADO NOVAMENTE - Priorizando resolução correta)
{
  "extends": "../tsconfig.json", // Herda baseUrl, paths, strict...
  "compilerOptions": {
    // --- Opções Específicas ou que Sobrescrevem a Raiz ---
    "target": "ES2020",
    "module": "ES2020",
    "lib": ["ES2020"],          // Sobrescreve 'lib' da raiz: sem "DOM"
    "outDir": "../.tmp",       // Diretório de saída
    "rootDir": ".",            // <-- Raiz é a pasta src-code. Crucial!
                               // Isso significa que imports para fora (../shared)
                               // podem precisar de um 'baseUrl' relativo ou
                               // que os 'paths' herdados da raiz resolvam corretamente
                               // a partir da raiz do projeto.

    // --- TypeRoots: Define explicitamente ONDE procurar tipos ---
    // Sobrescreve os typeRoots herdados. Essencial garantir que @figma esteja aqui.
    "typeRoots": [
      "../node_modules/@types",  // Caminho relativo de src-code para node_modules/@types
      "../node_modules/@figma",  // <<< ESSENCIAL: Caminho relativo para os tipos Figma
      "../shared/types"        // Caminho relativo para tipos compartilhados
    ],

    // 'paths' são herdados da raiz e devem resolver '@shared/*' a partir do baseUrl herdado ('.')
    // Se '@shared/*' ainda falhar, descomente e defina paths aqui:
    // "baseUrl": ".", // Pode ser necessário repetir se extends não funcionar como esperado com paths
    // "paths": {
    //   "@shared/*": ["../shared/*"]
    // },

    "composite": false,
    "isolatedModules": true, // Mantido por consistência com Vite
    "skipLibCheck": true // Mantido
  },
  "include": [
    // Inclui apenas os arquivos TS dentro de src-code
    "./**/*.ts"
    // Imports para ../config e @shared devem ser resolvidos via moduleResolution
  ],
  "exclude": [
    "../node_modules" // Exclui node_modules relativo a src-code
  ]
}